name: Deploy_To_PROD_Function_On_Release

# Runs when a Release is published from GitHub UI
on:
  release:
    types: [published]

env:
  NAME: func-validator-services
  STAGE: prod # prefix to indicate environment stage
  TAG: ${{ github.sha }}
  PGUSER: ${{ secrets.PROD_PGUSER }}
  PGPASSWORD: ${{ secrets.PROD_PGPASSWORD }}
  PGHOST: ${{ secrets.PROD_PGHOST }}
  PGDATABASE: ${{ secrets.PROD_PGDATABASE }}
  PGPORT: ${{ secrets.PROD_PGPORT }}
  STORAGECONNECTOR: ${{ secrets.PROD_STORAGECONNECTOR }}
  ADHOC_CONTAINER: ${{ secrets.PROD_ADHOC_CONTAINER }}
  VALIDATOR_API_URL: ${{ secrets.PROD_VALIDATOR_API_URL }}
  VALIDATOR_FUNC_KEY: ${{ secrets.PROD_VALIDATOR_FUNC_KEY }}
  API_KEY: ${{ secrets.PROD_DEFAULT_KEY }}
  KV_URI: ${{ secrets.PROD_KV_URI }}
  ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
  ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
  ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
  AZURE_CREDENTIALS: ${{ secrets.PROD_AZURE_CREDENTIALS }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v3

      - name: 'Login via Azure CLI'
        uses: azure/login@v1.4.4
        with:
          creds: ${{ env.AZURE_CREDENTIALS }} # Service Principal credentials saved in GitHub Secrets

      - name: 'Docker Login'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_LOGIN_SERVER }}
          username: ${{ env.ACR_USERNAME }}
          password: ${{ env.ACR_PASSWORD }}

      - name: 'Compose Customized Docker Image'
        run: |
          docker build . -t ${{ env.ACR_LOGIN_SERVER }}/$NAME-$STAGE:$TAG
          docker push ${{ env.ACR_LOGIN_SERVER }}/$NAME-$STAGE:$TAG

      - name: Set Env variables on app service
        uses: Azure/appservice-settings@v1.1.1
        with:
          app-name: '${{env.NAME}}-${{env.STAGE}}'
          app-settings-json: |
            [
                {
                    "name": "PGDATABASE",
                    "value": "${{ env.PGDATABASE }}",
                    "slotSetting": false
                },
                {
                    "name": "PGUSER",
                    "value": "${{ env.PGUSER }}",
                    "slotSetting": false
                },
                {
                    "name": "PGPASSWORD",
                    "value": "${{ env.PGPASSWORD }}",
                    "slotSetting": false
                },
                {
                    "name": "PGHOST",
                    "value": "${{ env.PGHOST }}",
                    "slotSetting": false
                },
                {
                    "name": "PGPORT",
                    "value": "${{ env.PGPORT }}",
                    "slotSetting": false
                },
                {
                    "name": "PGSSL",
                    "value": "true",
                    "slotSetting": false
                },
                {
                    "name": "STORAGECONNECTOR",
                    "value": "${{ env.STORAGECONNECTOR }}",
                    "slotSetting": false
                },
                {
                  "name": "ADHOC_CONTAINER",
                  "value": "${{ env.ADHOC_CONTAINER }}",
                  "slotSetting": false
                },
                {
                  "name": "VALIDATOR_API_URL",
                  "value": "${{ env.VALIDATOR_API_URL }}",
                  "slotSetting": false
                },
                {
                  "name": "VALIDATOR_FUNC_KEY",
                  "value": "${{ env.VALIDATOR_FUNC_KEY }}",
                  "slotSetting": false
                },
                { 
                    "name": "AzureWebJobsSecretStorageType",
                    "value": "keyvault",
                    "slotSetting": false
                },
                {
                    "name": "AzureWebJobsSecretStorageKeyVaultUri",
                    "value": "${{ env.KV_URI }}",
                    "slotSetting": false
                },
                {
                    "name": "FUNCTIONS_WORKER_RUNTIME",
                    "value": "node",
                    "slotSetting": false
                },
                {
                    "name": "DOCKER_REGISTRY_SERVER_URL",
                    "value": "${{ env.ACR_LOGIN_SERVER }}",
                    "slotSetting": false
                },
                {
                    "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
                    "value": "${{ env.ACR_PASSWORD }}",
                    "slotSetting": false
                },
                {
                    "name": "DOCKER_REGISTRY_SERVER_USERNAME",
                    "value": "${{ env.ACR_USERNAME }}",
                    "slotSetting": false
                }
            ]

      - name: 'Run Azure Functions Container Action'
        uses: Azure/functions-container-action@v1
        with:
          app-name: ${{ env.NAME }}-${{ env.STAGE }}
          image: ${{ env.ACR_LOGIN_SERVER }}/${{ env.NAME}}-${{ env.STAGE }}:${{ env.TAG }}

  integration-test:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v3

      - name: 'Install newman'
        run: |
          sudo npm i -g newman

      - name: 'Run integration tests'
        run: |
          newman run integration-tests/validator-services-tests.postman_collection.json \
            -e integration-tests/envs/validator-services-direct-PROD.postman_environment.json \
            --env-var keyValue=$API_KEY \
            --working-dir integration-tests/test-files
