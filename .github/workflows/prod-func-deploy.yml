name: Deploy_To_Dev_Function_On_Push

on:
  push:
    paths-ignore: # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#filter-pattern-cheat-sheet
      - '**/README.md' # don't run on README.md file updates anywhere in repo
      - '**/dependabot.yml'
    branches:
      - main

env:
  STAGE: prod # prefix to indicate environment stage
  NAME: func-validator-services
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.' # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '14.x' # set this to the node version to use (supports 8.x, 10.x, 12.x)
  PGUSER: ${{ secrets.PROD_PGUSER }}
  PGPASSWORD: ${{ secrets.PROD_PGPASSWORD }}
  PGHOST: ${{ secrets.PROD_PGHOST }}
  PGDATABASE: ${{ secrets.PROD_PGDATABASE }}
  PGPORT: ${{ secrets.PROD_PGPORT }}
  STORAGECONNECTOR:  ${{ secrets.PROD_STORAGECONNECTOR }}
  #API_KEY: ${{ secrets.PROD_DEFAULT_KEY }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v2

      - name: 'Setup Node ${{ env.NODE_VERSION }} Environment'
        uses: actions/setup-node@v2.3.2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.DEV_AZURE_CREDENTIALS }} # Service Principal credentials saved in GitHub Secrets

      - name: 'Resolve Project Dependencies Using Npm'
        shell: bash
        run: |# integration-test:
          #  needs: build-and-deploy
          #  runs-on: ubuntu-latest
           # steps:
          #    - name: 'Checkout GitHub Action'
          #      uses: actions/checkout@v2
        
          #    - name: 'Install newman'
          #      run: |
          #        npm i newman
          #    - name: 'Run integration tests' # Update -e environment file with an environment that points to your deployed instance
          #      run: |
          #        newman run integration-tests/validator-services-tests.postman_collection.json -e integration-tests/envs/validator-services-apim.postman_environment.json --env-var defaultKey=$API_KEY
        
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          npm install
          popd

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.STAGE }}-${{ env.NAME }}
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}

      - name: Set Env variables for connecting to Postgres and Redis instances
        uses: Azure/appservice-settings@v1
        with:
          app-name: '${{env.STAGE}}-${{env.NAME}}'
          app-settings-json: |
            [
                {
                    "name": "PGDATABASE",
                    "value": "${{ env.PGDATABASE }}",
                    "slotSetting": false
                },
                {
                    "name": "PGUSER",
                    "value": "${{ env.PGUSER }}",
                    "slotSetting": false
                },
                {
                    "name": "PGPASSWORD",
                    "value": "${{ env.PGPASSWORD }}",
                    "slotSetting": false
                },
                {
                    "name": "PGHOST",
                    "value": "${{ env.PGHOST }}",
                    "slotSetting": false
                },
                {
                    "name": "PGPORT",
                    "value": "${{ env.PGPORT }}",
                    "slotSetting": false
                },
                {
                  "name": "PGSSL",
                  "value": "true",
                  "slotSetting": false
                },
                {
                  "name": "STORAGECONNECTOR",
                  "value": "${{ env.STORAGECONNECTOR }}",
                  "slotSetting": false
                }
            ]

  # integration-test:
  #  needs: build-and-deploy
  #  runs-on: ubuntu-latest
   # steps:
  #    - name: 'Checkout GitHub Action'
  #      uses: actions/checkout@v2

  #    - name: 'Install newman'
  #      run: |
  #        npm i newman
  #    - name: 'Run integration tests' # Update -e environment file with an environment that points to your deployed instance
  #      run: |
  #        newman run integration-tests/validator-services-tests.postman_collection.json -e integration-tests/envs/validator-services-apim.postman_environment.json --env-var defaultKey=$API_KEY
