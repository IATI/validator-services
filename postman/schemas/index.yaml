openapi: '3.0.0'
info:
    version: '2.5.0'
    title: 'validator-services'
    description: Service, utility, and backend endpoints for the IATI Validator

servers:
    - url: 'http://localhost:7071'
      description: Local Function
    - url: 'https://func-validator-services-dev.azurewebsites.net'
      description: Dev environment Function (requires auth)
    - url: 'https://func-validator-services-prod.azurewebsites.net'
      description: Production environment Function (requires auth)

paths:
    /api/pub/version:
        get:
            summary: GET application version
            responses:
                200:
                    description: Version of the application in semver format
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: 1.0.7
                401:
                    $ref: '#/components/responses/UnauthorizedError'
                500:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
    /api/pvt/validation/regenerate:
        patch:
            summary: Trigger a validation report to be regenerated
            requestBody:
                description: The list of document ids to regenerate validation reports for
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DocumentIdsArray'
            responses:
                204:
                    description: Success
                400:
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                noIdsKey:
                                    value:
                                        error: 'Body must contain a key "ids"'
                                badIdsFormat:
                                    value:
                                        error: '"ids" must be an Array of document ids'
                                noBodyError:
                                    value:
                                        error: 'No Body'
                401:
                    $ref: '#/components/responses/UnauthorizedError'
                500:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
    /api/pvt/validation/regenerate/all:
        patch:
            summary: Trigger ALL validation reports to be regenerated
            responses:
                204:
                    description: Success
                401:
                    $ref: '#/components/responses/UnauthorizedError'
                500:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
    /api/pub/validation/existing:
        get:
          summary: Get an existing validation report
          parameters:
            - in: query
              name: id
              schema:
                $ref: '#/components/schemas/Id'
            - in: query
              name: hash
              schema:
                $ref: '#/components/schemas/Hash'
            - in: query
              name: url
              schema:
                $ref: '#/components/schemas/Url'
            - in: query
              name: name
              schema:
                $ref: '#/components/schemas/Name'
          responses:
            404:
              description: Report not found for provided identifier
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ClientError'
                  examples: 
                    noReport:
                      value:
                        client_error: 'The requested report does not exist.'
                    notReady:
                      value:
                        client_error: 'The requested report has not yet been generated - please try again later.'
            422:
              description: Bad Request
              content:
                  application/json:
                      schema:
                          $ref: '#/components/schemas/ClientError'
                      examples:
                          noQueryParam:
                              value:
                                  client_error: 'Either the id, url, hash or name of the document as obtained from the IATI Registry must be supplied as a GET parameter'
                          badIdsFormat:
                              value:
                                  client_error: '"ids" must be an Array of document ids'
                          noBodyError:
                              value:
                                  client_error: 'No Body'
            200:
              description: Validation Report
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ValidationReport'
    /api/pvt/publishers:
        get:
          summary: Get publishers
          responses:
            200:
              description: list of publishers metadata
              content:
                application/json::
                  schema:
                    $ref: '#/components/schemas/Publishers'
            401:
              $ref: '#/components/responses/UnauthorizedError'
            500:
                description: Unexpected error
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Error'
    /api/pvt/publishers/{lookupValue}:
        get:
          parameters:
            - in: query
              name: lookupKey
              required: true
              description: key to lookup the publisher with
              schema:
                type: string
                enum: 
                 - 'id'
                 - 'name'
            - in: path
              name: lookupValue
              required: true
              description: id or name of the publisher to return
              schema:
                type: string
                example: 'jica'
          summary: Get a single publisher
          responses:
            200:
              description: list of publishers metadata
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Publisher'
            401:
              $ref: '#/components/responses/UnauthorizedError'
            500:
                description: Unexpected error
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Error'
    /api/pvt/publishers/{publisherId}/documents:
        get:
          parameters:
            - in: path
              name: publisherId
              required: true
              description: id of the publisher to return documents for
              schema:
                type: string
                example: '8797b894-9858-492e-a109-dc45b75ce27b'
          responses:
            200:
              description: list of publishers documents, returns [] if nothing found 
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Documents'
            401:
              $ref: '#/components/responses/UnauthorizedError'
            500:
                description: Unexpected error
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Error'


components:
    responses:
        UnauthorizedError:
            description: API key is missing or invalid
    schemas:
        Id:
          type: string
          description: document id in unified platform database
          example: '971828f5-d7ca-40b5-ae38-2fd4c11846e0'
        Hash:
          type: string
          description: document hash in unified platform database
          example: '404504c0df91c3d4ae07bb6135e349ad90be401a'
        Url:
          type: string
          description: url of document in unified platform database
          example: 'https://www.host.com/iatiactivities.xml'
        Name:
          type: string
          description: name of document in iati registry and unified platform
          example: 'fifty_eight-et'
        DocumentIdsArray:
            type: object
            properties:
                ids:
                    type: array
                    items:
                        $ref: '#/components/schemas/Id'         
        Error:
            type: object
            required:
                - error
            properties:
                error:
                    description: A human readable error message
                    type: string
        ClientError:
            type: object
            required:
                - client_error
            properties:
                error:
                    description: A human readable error message
                    type: string
        ResponseMessage:
            type: object
            required:
                - message
            properties:
                message:
                    description: A human readable response message
                    type: string
        ValidationReport:
          type: object
          properties:
            registry_hash:
              type: string
            registry_id:
              type: string
            registry_name:
              type: string
            document_url:
              type: string
            valid:
              type: boolean
            report:
              type: object
              properties:
                valid:
                  type: boolean
                errors:
                  type: array
                  items:
                    type: object
                    properties:
                      title:
                        type: string
                      errors:
                        type: array
                        items:
                          type: object
                          properties:
                            errors:
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    type: string
                                  context:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        text:
                                          type: string
                                      required:
                                        - text
                                  message:
                                    type: string
                                  severity:
                                    type: string
                            category:
                              type: string
                      identifier:
                        type: string
                    required:
                      - title
                      - errors
                      - identifier
                summary:
                  type: object
                  properties:
                    error:
                      type: integer
                    warning:
                      type: integer
                    critical:
                      type: integer
                  required:
                    - error
                    - warning
                    - critical
                  additionalProperties: false
                fileType:
                  type: string
                apiVersion:
                  type: string
                iatiVersion:
                  type: string
                rulesetCommitSha:
                  type: string
                codelistCommitSha:
                  type: string
                orgIdPrefixFileName:
                  type: string
              required:
                - valid
                - errors
                - summary
                - fileType
                - apiVersion
                - iatiVersion
                - rulesetCommitSha
                - codelistCommitSha
                - orgIdPrefixFileName
              additionalProperties: false
          additionalProperties: false
          required:
            - registry_hash
            - registry_id
            - registry_name
            - document_url
            - valid
            - report
        Publishers:
          type: array
          items:
            type: object
            properties:
              org_id:
                type: string
              name:
                type: string
              title:
                type: string
              state:
                type: string
              country_code:
                type: string
              package_count:
                type: integer
              iati_id:
                type: string
              black_flag:
                type: string
              black_flag_notified:
                type: boolean
            required:
              - org_id
              - name
              - title
              - state
              - country_code
              - package_count
              - iati_id
              - black_flag
              - black_flag_notified
        Publisher:
          type: array
          items:
            type: object
            properties:
              org_id:
                type: string
              name:
                type: string
              description:
                type: string
              title:
                type: string
              state:
                type: string
              image_url:
                type: string
              country_code:
                type: string
              package_count:
                type: integer
              iati_id:
                type: string
        Documents:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              hash:
                type: string
              url:
                type: string
              name:
                type: string
              first_seen:
                type: string
              downloaded:
                type: string
              download_error:
                type: string
              file_schema_valid:
                type: boolean
              validation:
                type: integer
              regenerate_validation_report:
                type: boolean
              publisher:
                type: string
              modified:
                type: string
              solrize_end:
                type: string
              clean_start:
                type: string
              clean_end:
                type: string
              clean_error:
                type: 'string'
              validation_created:
                type: string
              valid:
                type: boolean
              report:
                type: object
                properties:
                  valid:
                    type: boolean
                  summary:
                    type: object
                    properties:
                      error:
                        type: integer
                      warning:
                        type: integer
                      critical:
                        type: integer
                    required:
                      - error
                      - warning
                      - critical
                    additionalProperties: false
                  fileType:
                    type: string
                  iatiVersion:
                    type: string
                required:
                  - valid
                  - summary
                  - fileType
                  - iatiVersion
                additionalProperties: false
            required:
              - id
              - hash
              - url
              - name
              - first_seen
              - downloaded
              - download_error
              - file_schema_valid
              - validation
              - regenerate_validation_report
              - publisher
              - modified
              - solrize_end
              - clean_start
              - clean_end
              - clean_error
              - validation_created
              - valid
              - report
    securitySchemes:
        ApiKeyHeader:
            type: apiKey
            in: header
            name: x-functions-key
        ApiKeyQuery:
            type: apiKey
            in: query
            name: x-functions-key
security:
    - ApiKeyHeader: []
    - ApiKeyQuery: []